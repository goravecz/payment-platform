version: "3.8"

services:
  payment-service:
    build:
      context: .
      dockerfile: payment-service/Dockerfile
    depends_on:
      - postgres
    ports:
      - "8765:8765"
      - "5005:5005"
    networks:
      - postgres-net
      - kafka-net
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/transactions_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password

  notification-processor:
    build:
      context: .
      dockerfile: notification-processor/Dockerfile
    ports:
      - "8766:8766"
      - "5006:5006"
    networks:
      - kafka-net
    environment:
      - SPRING_PROFILES_ACTIVE=dev

  postgres:
    image: postgres:15
    container_name: transactions_db
    environment:
      POSTGRES_DB: transactions_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - postgres-net
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"  # pgAdmin web UI accessible on http://localhost:5050
    networks:
      - postgres-net
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      CLUSTER_ID: '3Q2GmXQfRxmbWmKz_CZ-Eg'
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - kafka-net
    volumes:
      - kafka_data:/var/lib/kafka/data

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  kafka_data:
    driver: local

networks:
  postgres-net:
    driver: bridge
  kafka-net:
    driver: bridge

